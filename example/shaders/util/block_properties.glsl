#if !defined(BLOCK_ID_MAPPING)
#define BLOCK_ID_MAPPING
// This file was automatically generated by block_wrangler

struct SwayValues {
	int NONE
	int TOP;
	int BOTTOM;
	int FULL;
	int FLOATING;
	int HANGING;
};
const SwayValues Sway = SwayValues(0, 1, 2, 3, 4, 5)
Sway SwayType(int id) {
    if (id == 1000 || id == 1005) {
        return Sway.TOP;
    } else if (id == 1001 || id == 1006) {
        return Sway.BOTTOM;
    } else if (id == 1002 || id == DH_BLOCK_LEAVES) {
        return Sway.FULL;
    } else if (id == 1003) {
        return Sway.FLOATING;
    } else if (id == 1004 || id == 1024) {
        return Sway.HANGING;
    } else {
        return Sway.NONE;
    }
}


bool IsCrops(int id) {
    return id == 1005 || id == 1006;
}


bool IsWater(int id) {
    return id == 1007 || id == DH_BLOCK_WATER;
}


int GetEmissivity(int id) {
    if (id == 1009) {
        return 1;
    } else if (id == 1010) {
        return 2;
    } else if (id == 1011) {
        return 3;
    } else if (id == 1012) {
        return 4;
    } else if (id == 1013) {
        return 5;
    } else if (id == 1014) {
        return 6;
    } else if (id == 1015) {
        return 7;
    } else if (id == 1016) {
        return 8;
    } else if (id == 1017) {
        return 9;
    } else if (id == 1018) {
        return 10;
    } else if (id == 1019) {
        return 11;
    } else if (id == 1020) {
        return 12;
    } else if (id == 1021) {
        return 13;
    } else if (id == 1022) {
        return 14;
    } else if (id == 1023 || id == 1024) {
        return 15;
    } else {
        return 0;
    }
}


bool IsEmissive(int id) {
    return id == 1008 || id == 1009 || id == 1010 || id == 1011 || id == 1012 || id == 1013 || id == 1014 || id == 1015 || id == 1016 || id == 1017 || id == 1018 || id == 1019 || id == 1020 || id == 1021 || id == 1022 || id == 1023 || id == 1024 || id == DH_BLOCK_LAVA || id == DH_BLOCK_ILLUMINATED;
}


#endif // BLOCK_ID_MAPPING