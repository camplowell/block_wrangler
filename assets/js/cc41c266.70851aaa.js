"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[927],{9742:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"alpha-blog-post","metadata":{"permalink":"/block_wrangler/blog/alpha-blog-post","source":"@site/blog/2024-07-11-alpha-blog-post.mdx","title":"First alpha release!","description":"Welcome to the first alpha release of Block Wrangler!","date":"2024-07-11T00:00:00.000Z","tags":[{"inline":false,"label":"Announcement","permalink":"/block_wrangler/blog/tags/announcements","description":"Big news or changes in direction"}],"readingTime":1.44,"hasTruncateMarker":false,"authors":[{"name":"Lowell Camp","title":"Maintainer of Block Wrangler","url":"https://github.com/camplowell","imageURL":"https://github.com/camplowell.png","key":"lowell"}],"frontMatter":{"slug":"alpha-blog-post","title":"First alpha release!","authors":["lowell"],"tags":["announcement"]},"unlisted":false},"content":"Welcome to the first alpha release of Block Wrangler!\\n\\nThe few of you who followed the [previous repository](https://github.com/camplowell/block_properties) might be wondering why I started over like this.\\n\\nThere are a few reasons for this:\\n- I discovered that `block.properties` requires block IDs to be mutually exclusive, and the previous system wasn\'t capable of ensuring that.\\n\\t- In fact, changing the old system to be capable of this would have required a full rewrite anyways, so I decided to start over.\\n- The old system required me to write and maintain a custom code interpreter, which isn\'t ideal for a project whose goal is *not* to create a new programming language.\\n\\nAll that to say, I started over, and I\'m pretty happy with the results.\\n\\nIn addition to rectifying those pain points, I also managed to squeeze out a few more features:\\n- I added the optional `fuzzy_tags` feature, which allows the library to tell you if you misspelled a tag, or if it\'s a tag that doesn\'t exist.\\n- It\'s now possible to import block types and tags from mods and new versions of the game using the [data generator](https://wiki.vg/Data_Generators).\\n- Tags can now do things like include all blocks that have a certain property, or whose name matches a certain pattern.\\n\\t- ...as long as you\'ve registered the blocks before you define the tag.\\n- better progress bars!\\n\\n## What\'s next?\\n\\nI have a few ideas on my wishlist for future releases:\\n- Improve the documentation for the project, of course\\n- Add one or more project templates to help shaderpack developers get started with Block Wrangler\\n- Add more preset tags for features that are commonly used in shaderpacks\\n- Numerical flags support (`int emission_brightness(int block_id)`)"}]}}')}}]);