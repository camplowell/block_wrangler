"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[215],{2681:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var s=t(4848),a=t(8453);const i={sidebar_position:2,description:"How to find blocks and block states for use in flags"},l="Finding Blocks",r={id:"basic_usage/finding_blocks",title:"Finding Blocks",description:"How to find blocks and block states for use in flags",source:"@site/docs/basic_usage/finding_blocks.mdx",sourceDirName:"basic_usage",slug:"/basic_usage/finding_blocks",permalink:"/block_wrangler/docs/basic_usage/finding_blocks",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"How to find blocks and block states for use in flags"},sidebar:"tutorialSidebar",previous:{title:"Flag Types",permalink:"/block_wrangler/docs/basic_usage/flag_types"},next:{title:"Combining Blocks",permalink:"/block_wrangler/docs/basic_usage/combining_blocks"}},o={},c=[{value:"Literal blocks",id:"literal-blocks",level:2},{value:"Tags",id:"tags",level:2},{value:"Gathering blocks",id:"gathering-blocks",level:2},{value:"Searching by an arbitrary filter",id:"searching-by-an-arbitrary-filter",level:3},{value:"Searching by state",id:"searching-by-state",level:3},{value:"Searching by signature",id:"searching-by-signature",level:3}];function d(e){const n={blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"finding-blocks",children:"Finding Blocks"}),"\n",(0,s.jsxs)(n.p,{children:["Sets of block states are represented by ",(0,s.jsx)(n.code,{children:"BlockCollection"})," objects (usually the ",(0,s.jsx)(n.code,{children:"Blocks"})," class).\nThere are several ways to find blocks in order to use them in flags."]}),"\n",(0,s.jsx)(n.h2,{id:"literal-blocks",children:"Literal blocks"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"blocks"})," function to find blocks and block states by name:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"blocks('minecraft:oak_leaves', 'minecraft:redstone_ore:lit=true')\n"})}),"\n",(0,s.jsx)(n.h2,{id:"tags",children:"Tags"}),"\n",(0,s.jsx)(n.p,{children:"Tags are preset functions used to find blocks and block states.\nYou can find a list of block states within a given tag by indexing into a tag collection:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"tags = load_tags() # Load pre-defined tags from the BlockWrangler library\ntags['minecraft:leaves'] # Find the tag named 'minecraft:leaves'\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["If you installed Block Wrangler with the ",(0,s.jsx)(n.code,{children:"[fuzzy_tags]"})," option, the library will include more detailed error messaging if you misspell a tag!"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"gathering-blocks",children:"Gathering blocks"}),"\n",(0,s.jsx)(n.p,{children:"Sometimes you may want to get all the blocks that meet certain criteria.\nFor example, you may want to get all blocks with a certain property, or all blocks that contain a certain string in their name."}),"\n",(0,s.jsxs)(n.p,{children:["To do this, you can use the ",(0,s.jsx)(n.code,{children:"gather"})," function."]}),"\n",(0,s.jsx)(n.h3,{id:"searching-by-an-arbitrary-filter",children:"Searching by an arbitrary filter"}),"\n",(0,s.jsxs)(n.p,{children:["To search for blocks that meet an arbitrary filter, you can a function to the ",(0,s.jsx)(n.code,{children:"type_filter"})," argument.",(0,s.jsx)(n.br,{}),"\n","It should take a ",(0,s.jsx)(n.code,{children:"BlockType"})," and return a boolean indicating whether the block should be included in the result."]}),"\n",(0,s.jsx)(n.p,{children:"For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"oak_blocks = gather_blocks(type_filter = lambda block: block.name.startswith('oak'))\nvanilla_blocks = gather_blocks(type_filter =lambda block: block.namespace == 'minecraft')\n"})}),"\n",(0,s.jsx)(n.h3,{id:"searching-by-state",children:"Searching by state"}),"\n",(0,s.jsxs)(n.p,{children:["To search for blocks that meet a state filter, you can pass a ",(0,s.jsx)(n.code,{children:"StateFilter"})," to the ",(0,s.jsx)(n.code,{children:"state_filter"})," argument.",(0,s.jsx)(n.br,{}),"\n","A state filter is a function that takes a ",(0,s.jsx)(n.code,{children:"BlockType"})," and returns a boolean indicating whether the block should be included in the result."]}),"\n",(0,s.jsx)(n.p,{children:"For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"lit_blocks = gather_blocks(state_filter = lambda state: state.lit == 'true')\n"})}),"\n",(0,s.jsx)(n.h3,{id:"searching-by-signature",children:"Searching by signature"}),"\n",(0,s.jsxs)(n.p,{children:["Sometimes you may want to get all the blocks with a certain property, regardless of its value.\nFor example, you may want to get all blocks that have a ",(0,s.jsx)(n.code,{children:"lit"})," property that can be either ",(0,s.jsx)(n.code,{children:"true"})," or ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["To do this, you can pass a subclass of ",(0,s.jsx)(n.code,{children:"BlockState"})," to the ",(0,s.jsx)(n.code,{children:"signature"})," argument.",(0,s.jsx)(n.br,{}),"\n","Any subclasses should define certain properties and their possible values."]}),"\n",(0,s.jsxs)(n.p,{children:["As a bonus, this will add type hinting to the function you pass to ",(0,s.jsx)(n.code,{children:"state_filter"}),"!"]}),"\n",(0,s.jsx)(n.p,{children:"For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Lightable(BlockState):\n\tlit: Literal['true', 'false']\n\nlightable_blocks = gather_blocks(signature=Lightable)\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(6540);const a={},i=s.createContext(a);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);