"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[273],{1266:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var a=s(4848),i=s(8453);const l={sidebar_position:1,description:"How to define flags for use in shaders"},o="Flag Types",r={id:"basic_usage/flag_types",title:"Flag Types",description:"How to define flags for use in shaders",source:"@site/docs/basic_usage/flag_types.mdx",sourceDirName:"basic_usage",slug:"/basic_usage/flag_types",permalink:"/block_wrangler/docs/basic_usage/flag_types",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"How to define flags for use in shaders"},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/block_wrangler/docs/overview"},next:{title:"Finding Blocks",permalink:"/block_wrangler/docs/basic_usage/finding_blocks"}},t={},c=[{value:"Boolean Flags",id:"boolean-flags",level:2},{value:"Series Flags",id:"series-flags",level:2}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"flag-types",children:"Flag Types"}),"\n",(0,a.jsx)(n.p,{children:"Flags are functions that can be used to query information about a block inside a shader."}),"\n",(0,a.jsx)(n.p,{children:"They come in two flavors:"}),"\n",(0,a.jsx)(n.h2,{id:"boolean-flags",children:"Boolean Flags"}),"\n",(0,a.jsx)(n.p,{children:"Boolean flags result in a function with the following signature:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-glsl",children:"bool flag(int id)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["They are declared by handing the BlockMapping constructor a single block collection.",(0,a.jsx)(n.br,{}),"\n","For example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"BlockMapping.solve({\n\t'flag': tags['minecraft:flowers'] + blocks('minecraft:leaves')\n})\n"})}),"\n",(0,a.jsx)(n.h2,{id:"series-flags",children:"Series Flags"}),"\n",(0,a.jsx)(n.p,{children:"Series flags result in a function with one of two signatures:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-glsl",children:"int flag(int id)\n"})}),"\n",(0,a.jsx)(n.p,{children:"or"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-glsl",children:"float flag(int id)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["They are defined by passing a ",(0,a.jsx)(n.code,{children:"Dict[int|float, BlockCollection]"})," to the ",(0,a.jsx)(n.code,{children:"SeriesFlag"})," constructor.",(0,a.jsx)(n.br,{}),"\n","For example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"BlockMapping.solve({\n\t'flag': {i:tags['lights/{i}' for i in range(1, 16)]}\n})\n"})})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var a=s(6540);const i={},l=a.createContext(i);function o(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);